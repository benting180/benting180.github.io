<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/2021/01/17/2020-01-31-Development_is_boring/</url>
    <content><![CDATA[<p>Have you ever feel that development is boring? lets draw an analogy. say you are given a math problem. first of all, you have to figure out a way to solve the it (what is step 1, step 2, …), and then secondly, you implement the algorithm (lets do step 1, then step 2, …). as you can see, the process can be mainly divided into two parts. thinking and implementing. I would say, most of the time, the “thinking” part is the intellectually more difficult, interesting, and challenging, compare to the “implementing” part.</p>
<p>now lets go to the software part. once you are done with the thinking part (thinking about the design, the logic of the software), you are just a typing machine…</p>
<p>I used to feel bored when I am just being a typing machine…</p>
<p>later on, I found I am just not passionate about what I was working on… recently, I am learning some fundamental stuff about game development (make a first person shooting game using command prompt console), although I understand the math, the logic behind the game, I was quite excited when I see the result.</p>
<p>So if you find development bored, chances are you just dont like it. developing something else might help (game is a good choice).</p>
<p>one more important thing is, our society always people to think and implement. we cant live without either one.</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/01/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/01/17/2020-07-04-learning_python_threading/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from threading import Thread</span><br><span class="line">import os</span><br><span class="line">import math</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">t1 = time.time()</span><br><span class="line">def calc():</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(0, 4000000):</span><br><span class="line">    math.sqrt(i)</span><br><span class="line"> </span><br><span class="line">threads = []</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(os.cpu_count()):</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&#x27;registering thread %d&#x27;</span> % i)</span><br><span class="line">  threads.append(Thread(target=calc))</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.setDaemon(True)</span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">  thread.start()</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.setDaemon(True)</span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.start()</span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.join()</span><br></pre></td></tr></table></figure>
<p>with just start(), then join():<br>the main thread would wait until all thread are finish, then exit()</p>
<p>with just start():<br>the main thread should just exit once all threads are started. but in practice it does not happen. because there are some non-daemon thread running?</p>
<p>with setDaemon=True, start():</p>
<ol>
<li>main python program can exit when there are no non-daemon thread exist.<br>… another way of saying:<br>when threads are daemon, the program can just exit. without caring there are still some daemon thread.</li>
</ol>
<p>example use case:<br>some task need to be running at background while main programming is running.<br>more specifically, say a multiplayer shooter game program, the networking thread would be a daemon thread. sending player’s movement, actions.</p>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference:"></a>reference:</h1><ol>
<li><a href="https://laike9m.com/blog/daemon-is-not-daemon-but-what-is-it,97/">https://laike9m.com/blog/daemon-is-not-daemon-but-what-is-it,97/</a></li>
<li>Threading vs Multiprocessing</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Setup Blog with Hexo + Github Pages</title>
    <url>/2021/01/17/setuphexo/</url>
    <content><![CDATA[<p>![Screenshot from 2021-01-17 10-43-06](./setuphexo/Screenshot from 2021-01-17 10-43-06.png)</p>
<ul>
<li><a href="https://www.zhihu.com/question/21193762">使用hexo，如果换了电脑怎么更新博客？</a></li>
</ul>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="https://www.bilibili.com/video/av60124681/">一毛钱不拔，程序员免费搭建个人技术博客</a></li>
<li><a href="https://blog.csdn.net/tuckEnough/article/details/107383201">hexo theme next7.8 主题美化</a></li>
</ul>
]]></content>
  </entry>
</search>
